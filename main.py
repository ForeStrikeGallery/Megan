import nltk
from nltk import word_tokenize
from chatterbot import ChatBot

class TextBot:
	'''
		This class is a wrapper around the ChatBot object in 
		chatterbot. The TextBot object is trained using the 
		english corpus in the constructor.
	'''

	def __init__(self):
		'''
			Contructor:
			Initialises and trains the ChatBot object
		'''
		self.bot = ChatBot( 'Ron Obvious', \
			trainer='chatterbot.trainers.ChatterBotCorpusTrainer' )
		self.train_bot()


	def train_bot(self):
		''' Trains bot using english corpus'''
		self.bot.train("chatterbot.corpus.english")

	def get_reply(self, message):
		'''Returns a string, which is the response generated by ChatBot object'''
		return str(self.bot.get_response(message))



def get_bot_reply(message):

	name = "default_name"
	words = word_tokenize(message)
	tagged = nltk.pos_tag(words)
	for word in tagged:
		if word[1] == 'NNP':
			name = word[0]

	return "Hey, %s how're you doing today?" % name		




def start_chatbot():
	
	print "______Megan______"

	megan = TextBot()

	while(True):
		# Infinite loop, keeps prompting for input
		# and responds using TextBot object
		user_message = raw_input("> ")
		bot_reply = megan.get_reply(user_message)
		print "> " + bot_reply


if __name__ == '__main__':
	start_chatbot()